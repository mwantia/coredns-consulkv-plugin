name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm, arm64]
        exclude:
          - goos: windows
            goarch: arm
          - goos: windows
            goarch: arm64
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22

    - name: Get CoreDNS
      run: |
        git clone https://github.com/coredns/coredns.git
        cd coredns
        echo "consulkv:github.com/${{ github.repository }}" >> plugin.cfg

    - name: Build
      run: |
        cd coredns
        go get github.com/mwantia/coredns-consulkv-plugin
        go generate
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o coredns
      env:
        CGO_ENABLED: 0

    - name: Create Archive
      run: |
        cd coredns
        zip coredns-consulkv-${{ matrix.goos }}-${{ matrix.goarch }}.zip coredns

    - name: Create Release
      if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref_name }} \
          --title "Release ${{ github.ref_name }}" \
          --notes "Release ${{ github.ref_name }}" \
          --draft

    - name: Upload Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        cd coredns
        gh release upload ${{ github.ref_name }} coredns-consulkv-${{ matrix.goos }}-${{ matrix.goarch }}.* --clobber

    - name: Publish Release
      if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release edit ${{ github.ref_name }} --draft=false
